/*
 *******************************************************************************
 * Copyright (c) 2019-2021, STMicroelectronics
 * All rights reserved.
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 *******************************************************************************
 */
#pragma once

/*----------------------------------------------------------------------------
 *        Pins
 *----------------------------------------------------------------------------*/
// This must be a literal
#define NUM_DIGITAL_PINS        11
// This must be a literal with a value less than or equal to to MAX_ANALOG_INPUTS
#define NUM_ANALOG_INPUTS       11

// On-board LED pin number
#ifndef LED_BUILTIN
  #define LED_BUILTIN           13
#endif

// SPI Definitions
// SPI definitions
#ifndef PIN_SPI_SS
  #define PIN_SPI_SS            PA_15
#endif
#ifndef PIN_SPI_MOSI
  #define PIN_SPI_MOSI          PB_5
#endif
#ifndef PIN_SPI_MISO
  #define PIN_SPI_MISO          PB_4
#endif
#ifndef PIN_SPI_SCK
  #define PIN_SPI_SCK           PB_3
#endif

// I2C Definitions
#ifndef PIN_WIRE_SDA
  #define PIN_WIRE_SDA          33
#endif
#ifndef PIN_WIRE_SCL
  #define PIN_WIRE_SCL          32
#endif

// Timer Definitions
// Use TIM6/TIM7 when possible as servo and tone don't need GPIO output pin
#ifndef TIMER_TONE
  #define TIMER_TONE            TIM6
#endif
#ifndef TIMER_SERVO
  #define TIMER_SERVO           TIM7
#endif


// UART Definitions
#ifndef SERIAL_UART_INSTANCE
  #define SERIAL_UART_INSTANCE  1 //Connected to ST-Link
#endif

// Default pin used for 'Serial' instance (ex: ST-Link)
// Mandatory for Firmata
#ifndef PIN_SERIAL_RX
  #define PIN_SERIAL_RX         PA_10
#endif
#ifndef PIN_SERIAL_TX
  #define PIN_SERIAL_TX         PA_9
#endif

/* Extra HAL modules */
#if !defined(HAL_DAC_MODULE_DISABLED)
  #define HAL_DAC_MODULE_ENABLED
#endif

// Motor Pins
#define PIN_M1_A   26
#define PIN_M1_B   27
#define PIN_M1_PWM 28
#define PIN_M2_A   29
#define PIN_M2_B   30
#define PIN_M2_PWM 31

// Knob / SW_OK
#define PIN_KNOB   25
#define PIN_SW_OK  25


/*----------------------------------------------------------------------------
 *        Arduino objects - C++ only
 *----------------------------------------------------------------------------*/

#ifdef __cplusplus
  // These serial port names are intended to allow libraries and architecture-neutral
  // sketches to automatically default to the correct port name for a particular type
  // of use.  For example, a GPS module would normally connect to SERIAL_PORT_HARDWARE_OPEN,
  // the first hardware serial port whose RX/TX pins are not dedicated to another use.
  //
  // SERIAL_PORT_MONITOR        Port which normally prints to the Arduino Serial Monitor
  //
  // SERIAL_PORT_USBVIRTUAL     Port which is USB virtual serial
  //
  // SERIAL_PORT_LINUXBRIDGE    Port which connects to a Linux system via Bridge library
  //
  // SERIAL_PORT_HARDWARE       Hardware serial port, physical RX & TX pins.
  //
  // SERIAL_PORT_HARDWARE_OPEN  Hardware serial ports which are open for use.  Their RX & TX
  //                            pins are NOT connected to anything by default.
  #define SERIAL_PORT_MONITOR   Serial
  // #define SERIAL_PORT_HARDWARE  Serial2
#endif
